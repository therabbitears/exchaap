<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:Xaminals.Views.Offers.Models"
             mc:Ignorable="d"
             x:Class="Xaminals.Views.Offers.Offer"
             xmlns:OffeControls="clr-namespace:exchaup.CustomControls.Offer"
             xmlns:localFormatters="clr-namespace:exchaup.Infra.Formatters"
             xmlns:customControl="clr-namespace:exchaup.CustomControls;assembly=exchaup"
             xmlns:customControlN="clr-namespace:exchaup.CustomControls;assembly=exchaup"
             Title="New exhaup" x:Name="mainPage">
    <ContentPage.BindingContext>
        <local:OfferViewModel />
    </ContentPage.BindingContext>
    <ContentPage.Resources>
        <ResourceDictionary>
            <localFormatters:PlaceholderImageFormatter x:Key="cnvPlaceholderImageFormatter"></localFormatters:PlaceholderImageFormatter>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Save" Command="{Binding SaveOfferCommand}"/>
        <ToolbarItem Text="Cancel" Command="{Binding CancelCommand}"/>
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <StackLayout StyleClass="parentContainer">
            <customControlN:SpinnerView IsVisible="{Binding IsBusy}"/>
            <ScrollView>
                <StackLayout>
                    <Label  StyleClass="SectionHeadingStyle" Text="General"/>
                    <Label StyleClass="formLabel" Text="What thing do you want to exchange or giveaway:"/>
                    <SearchBar Placeholder="Select item you want to exchange or give away from list" Focused="OnListToGetsFocus" Text="{Binding Category.Name}" Margin="0"/>
                    <Label Text="Please select what you want to exchange of giveaway." StyleClass="validationError" IsVisible="{Binding IsCategorySelected, Converter={StaticResource cnvReveresBoolConverter}}" />
                    <StackLayout IsVisible="{Binding Category.Selected}">
                        <OffeControls:SelectedCategory x:Name="selectedItem" BindingContext="{Binding Category}" />
                    </StackLayout>
                    <StackLayout>
                        <Label Text="What you want exchange with:(Leave unselected if you are giving it up)" StyleClass="formLabel" />
                        <SearchBar Placeholder="Optional:Select one or multiple items you want to exchange with." Focused="OnExchangeWithGetsFocus"/>
                        <ScrollView Orientation="Horizontal">
                            <StackLayout BindableLayout.ItemsSource="{Binding Categories}" Orientation="Horizontal">
                                <BindableLayout.ItemTemplate>
                                    <DataTemplate>
                                        <StackLayout>
                                            <StackLayout.GestureRecognizers>
                                                <TapGestureRecognizer Command="{Binding Source={x:Reference mainPage}, Path=BindingContext.ClickedOnCategoryItemCommand}" CommandParameter="{Binding .}"/>
                                            </StackLayout.GestureRecognizers>
                                            <OffeControls:SelectedCategory />
                                        </StackLayout>
                                    </DataTemplate>
                                </BindableLayout.ItemTemplate>
                            </StackLayout>
                        </ScrollView>
                    </StackLayout>
                    <Label  StyleClass="SectionHeadingStyle" Text="Detail"/>
                    <Label Text="Enter an easy and short title of this ad:" StyleClass="formLabel" />
                    <customControlN:CustomeEntry Text="{Binding Heading.Value}" Placeholder="Title of the ad" />
                    <Label Text="{Binding Heading.Errors[0]}" StyleClass="validationError" IsVisible="{Binding Heading.IsValid, Converter={StaticResource cnvReveresBoolConverter}}"/>

                    <Label Text="Enter detail of this ad(Like brand, age etc.):" StyleClass="formLabel" />
                    <Editor Text="{Binding Detail.Value}" Placeholder="You can enter brand or age or any information" />
                    <Label Text="{Binding Detail.Errors[0]}" StyleClass="validationError" IsVisible="{Binding Detail.IsValid, Converter={StaticResource cnvReveresBoolConverter}}"/>

                    <Label Text="Enter optional instructions if any:" StyleClass="formLabel" />
                    <Editor Text="{Binding Terms}" Placeholder="Optional: Instructions or detail" />
                    <Label  StyleClass="SectionHeadingStyle" Text="Appearance"/>
                    <Label Text="Available from now(Untick and select the date if available after specific date):" StyleClass="formLabel" />
                    <Switch IsToggled="{Binding ImmediatelyAvailable}" HorizontalOptions="StartAndExpand" />
                    <StackLayout>
                        <StackLayout.Triggers>
                            <DataTrigger TargetType="StackLayout" Binding="{Binding ImmediatelyAvailable}" Value="true">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                            <DataTrigger TargetType="StackLayout" Binding="{Binding ImmediatelyAvailable}" Value="false">
                                <Setter Property="IsVisible" Value="True"/>
                            </DataTrigger>
                        </StackLayout.Triggers>
                        <Label StyleClass="formLabel" Text="Select the date it is available from:" />
                        <DatePicker Date="{Binding ValidFrom.Value}" />
                    </StackLayout>
                    <AbsoluteLayout BackgroundColor="Transparent" Grid.Row="1" Grid.ColumnSpan="2">
                        <Frame CornerRadius="100" AbsoluteLayout.LayoutBounds=".5,0,200,200" AbsoluteLayout.LayoutFlags="XProportional" HeightRequest="400" WidthRequest="400" HorizontalOptions="Center" Padding="0" IsClippedToBounds="True">
                            <Image x:Name="imageView" Source="{Binding SourceImage}" WidthRequest="400" HorizontalOptions="Center" VerticalOptions="Center" />
                        </Frame>
                        <Button BackgroundColor="Transparent" FontSize="80" TextColor="Gray" Text="+" Command="{Binding SelectImageCommand}"  AbsoluteLayout.LayoutBounds=".5,0,200,200" AbsoluteLayout.LayoutFlags="XProportional" BorderRadius="100" />
                    </AbsoluteLayout>
                    <Label Text="List into:" StyleClass="formLabel" />
                    <Grid Grid.Row="1" RowSpacing="0" ColumnSpacing="0">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding SelectLocationCommand}"/>
                        </Grid.GestureRecognizers>
                        <customControl:GlyphLabel Grid.Row="0" VerticalOptions="CenterAndExpand" Grid.Column="0" x:Name="labelCompans" FontFamily="FontAwesomeRegular" Text="&#xf14e;" StyleClass="gylypLabelBig, primaryColorText" />
                        <Label Grid.Row="0" Grid.Column="1" VerticalOptions="CenterAndExpand" Text="{Binding Location.Name}" StyleClass="MediumText" />
                        <Label Text="Tap to edit" Grid.Row="0" Grid.Column="2" VerticalOptions="CenterAndExpand" StyleClass="MediumText" />
                    </Grid>
                </StackLayout>
            </ScrollView>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>