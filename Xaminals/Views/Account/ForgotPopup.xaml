<?xml version="1.0" encoding="utf-8" ?>
<pages:PopupPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:rgAnimations="clr-namespace:Xaminals.Views.Common.Animations;assembly=exchaup"
             xmlns:local="clr-namespace:Loffers.Views.Account.ViewModel"
             xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
             xmlns:localFormatters="clr-namespace:Xaminals.Infra.Formatters"
             mc:Ignorable="d"
             x:Class="Loffers.Views.Account.ForgotPopup"
             xmlns:customControl="clr-namespace:Loffers.CustomControls;assembly=exchaup">
    <ContentPage.BindingContext>
        <local:ResetPasswordViewModel />
    </ContentPage.BindingContext>
    <ContentPage.Resources>
        <ResourceDictionary>
            <localFormatters:ReveresBoolConverter x:Key="cnvReveresBoolConverter"></localFormatters:ReveresBoolConverter>
        </ResourceDictionary>
    </ContentPage.Resources>
    <pages:PopupPage.Animation>
        <rgAnimations:CustomMoveAnimation PositionIn="Bottom" PositionOut="Bottom" DurationIn="300" DurationOut="500" />
    </pages:PopupPage.Animation>
    <ContentPage.Content>
        <StackLayout BackgroundColor="White" Margin="0,50,0,0" VerticalOptions="EndAndExpand" Padding="20,0,20,20">
            <customControl:PopupCloseView />

            <StackLayout Padding="0,0,0,20" IsVisible="{Binding IsBusy}">
                <ActivityIndicator IsRunning="{Binding IsBusy}"  />
            </StackLayout>
            <StackLayout>
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout" Binding="{Binding IsCodeSent}" Value="false">
                        <Setter Property="IsVisible" Value="True"/>
                    </DataTrigger>
                    <DataTrigger TargetType="StackLayout" Binding="{Binding IsCodeSent}" Value="true">
                        <Setter Property="IsVisible" Value="False"/>
                    </DataTrigger>
                </StackLayout.Triggers>
                <Entry Text="{Binding UserName.Value}"
                       Placeholder="Username" />
                <Label Text="{Binding UserName.Errors[0]}" StyleClass="validationError" IsVisible="{Binding UserName.IsValid, Converter={StaticResource cnvReveresBoolConverter}}"/>

                <Button Text="Generate" Command="{Binding GenerateCodeCommand}" StyleClass="primaryButton" />
                <Button Text="Cancel" Command="{Binding CancelPopupCommand}" />
            </StackLayout>
            <StackLayout>
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout" Binding="{Binding IsCodeSent}" Value="true">
                        <Setter Property="IsVisible" Value="True"/>
                    </DataTrigger>
                    <DataTrigger TargetType="StackLayout" Binding="{Binding IsCodeSent}" Value="false">
                        <Setter Property="IsVisible" Value="False"/>
                    </DataTrigger>
                </StackLayout.Triggers>
                <Entry Text="{Binding UserName.Value}"
                       Placeholder="Username" IsEnabled="false"  />
                <Label Text="{Binding UserName.Errors[0]}" StyleClass="validationError" IsVisible="{Binding UserName.IsValid, Converter={StaticResource cnvReveresBoolConverter}}"/>

                <Entry Text="{Binding SecurityCode.Value}"
                       Placeholder="Security code sent" />
                <Label Text="{Binding SecurityCode.Errors[0]}" StyleClass="validationError" IsVisible="{Binding SecurityCode.IsValid, Converter={StaticResource cnvReveresBoolConverter}}"/>

                <Entry Text="{Binding Password.Value}"
                       Placeholder="Password"
                       IsPassword="True" />
                <Label Text="{Binding Password.Errors[0]}" StyleClass="validationError" IsVisible="{Binding Password.IsValid, Converter={StaticResource cnvReveresBoolConverter}}"/>

                <Entry Text="{Binding ConfirmPassword.Value}"
                       Placeholder="Confirm password"
                       IsPassword="True" />
                <Label Text="{Binding ConfirmPassword.Errors[0]}" StyleClass="validationError" IsVisible="{Binding ConfirmPassword.IsValid, Converter={StaticResource cnvReveresBoolConverter}}"/>

                <Button Text="Reset" Command="{Binding SetPasswordCommand}" StyleClass="primaryButton" />
                <Button Grid.Row="3" Text="Cancel" Command="{Binding CancelPopupCommand}" />
            </StackLayout>
        </StackLayout>
    </ContentPage.Content>
</pages:PopupPage>